/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.checkerWeb.checker.checkerBase.sablecc.lexer;

import java.io.*;
import com.checkerWeb.checker.checkerBase.sablecc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTraditionalComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocumentationComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataType(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumericConstant(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTextLiteral(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeyword(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnknown(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 11, 1}, {12, 12, 4}, {13, 13, 5}, {14, 31, 1}, {32, 32, 6}, {33, 33, 7}, {34, 34, 8}, {35, 35, 9}, {36, 36, 1}, {37, 37, 10}, {38, 38, 11}, {39, 39, 12}, {40, 40, 13}, {41, 41, 14}, {42, 42, 15}, {43, 43, 16}, {44, 44, 17}, {45, 45, 18}, {46, 46, 19}, {47, 47, 20}, {48, 48, 21}, {49, 57, 22}, {58, 58, 1}, {59, 59, 23}, {60, 60, 24}, {61, 61, 25}, {62, 62, 26}, {63, 63, 27}, {64, 64, 1}, {65, 75, 28}, {76, 76, 29}, {77, 90, 28}, {91, 93, 1}, {94, 94, 30}, {95, 95, 31}, {96, 96, 1}, {97, 97, 32}, {98, 98, 33}, {99, 99, 34}, {100, 100, 35}, {101, 101, 36}, {102, 102, 37}, {103, 103, 38}, {104, 104, 39}, {105, 105, 40}, {106, 107, 39}, {108, 108, 41}, {109, 109, 42}, {110, 110, 43}, {111, 111, 44}, {112, 112, 45}, {113, 113, 39}, {114, 114, 46}, {115, 115, 47}, {116, 116, 48}, {117, 117, 49}, {118, 118, 50}, {119, 119, 51}, {120, 122, 39}, {123, 123, 52}, {124, 124, 53}, {125, 125, 54}, {126, 126, 55}, {127, 65535, 1}, },
            {},
            {{9, 9, 56}, {10, 10, 57}, {12, 12, 58}, {13, 13, 59}, {32, 32, 60}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {{9, 9, 56}, {10, 10, 61}, {12, 32, -4}, },
            {{9, 32, -4}, },
            {{61, 61, 62}, },
            {{0, 9, 63}, {11, 12, 63}, {14, 33, 63}, {34, 34, 64}, {35, 91, 63}, {92, 92, 65}, {93, 255, 63}, },
            {{100, 100, 66}, {101, 101, 67}, {105, 105, 68}, {112, 112, 69}, },
            {},
            {{38, 38, 70}, },
            {{0, 9, 71}, {11, 12, 71}, {14, 38, 71}, {40, 91, 71}, {92, 92, 72}, {93, 255, 71}, },
            {},
            {},
            {},
            {{43, 43, 73}, },
            {},
            {{45, 45, 74}, },
            {{48, 57, 75}, },
            {{42, 42, 76}, {47, 47, 77}, },
            {{46, 46, 78}, {48, 55, 79}, {56, 57, 80}, {68, 68, 81}, {69, 69, 82}, {88, 88, 83}, {100, 100, 84}, {101, 101, 85}, {120, 120, 86}, },
            {{46, 46, 78}, {48, 57, 87}, {68, 69, -23}, {100, 101, -23}, },
            {},
            {{60, 60, 88}, {61, 61, 89}, },
            {{61, 61, 90}, },
            {{61, 61, 91}, {62, 62, 92}, },
            {{58, 58, 93}, },
            {{48, 57, 94}, {65, 90, 95}, {95, 95, 96}, {97, 122, 97}, },
            {{34, 34, 98}, {39, 39, 99}, {48, 122, -30}, },
            {},
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 97, 97}, {98, 98, 100}, {99, 109, 97}, {110, 110, 101}, {111, 114, 97}, {115, 115, 102}, {116, 116, 103}, {117, 117, 104}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 110, 97}, {111, 111, 105}, {112, 113, 97}, {114, 114, 106}, {115, 122, 97}, },
            {{48, 95, -30}, {97, 97, 107}, {98, 103, 97}, {104, 104, 108}, {105, 107, 97}, {108, 108, 109}, {109, 110, 97}, {111, 111, 110}, {112, 116, 97}, {117, 117, 111}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 100, 97}, {101, 101, 112}, {102, 110, 97}, {111, 111, 113}, {112, 120, 97}, {121, 121, 114}, {122, 122, 97}, },
            {{48, 95, -30}, {97, 107, 97}, {108, 108, 115}, {109, 109, 97}, {110, 110, 116}, {111, 119, 97}, {120, 120, 117}, {121, 122, 97}, },
            {{48, 95, -30}, {97, 97, 118}, {98, 104, 97}, {105, 105, 119}, {106, 107, 97}, {108, 108, 120}, {109, 110, 97}, {111, 111, 121}, {112, 113, 97}, {114, 114, 122}, {115, 122, 97}, },
            {{48, 110, -35}, {111, 111, 123}, {112, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 101, 97}, {102, 102, 124}, {103, 109, 97}, {110, 110, 125}, {111, 122, 97}, },
            {{48, 110, -35}, {111, 111, 126}, {112, 122, 97}, },
            {{48, 110, -35}, {111, 111, 127}, {112, 116, 97}, {117, 117, 128}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 97, 129}, {98, 100, 97}, {101, 101, 130}, {102, 122, 97}, },
            {{48, 97, -34}, {98, 98, 131}, {99, 99, 132}, {100, 109, 97}, {110, 110, 133}, {111, 111, 97}, {112, 112, 134}, {113, 116, 97}, {117, 117, 135}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 113, 97}, {114, 114, 136}, {115, 116, 97}, {117, 117, 137}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 97, 138}, {98, 100, 97}, {101, 101, 139}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 140}, {102, 103, 97}, {104, 104, 141}, {105, 105, 142}, {106, 115, 97}, {116, 116, 143}, {117, 117, 144}, {118, 118, 97}, {119, 119, 145}, {120, 122, 97}, },
            {{48, 100, -37}, {101, 101, 146}, {102, 103, 97}, {104, 104, 147}, {105, 113, 97}, {114, 114, 148}, {115, 120, 97}, {121, 121, 149}, {122, 122, 97}, },
            {{48, 95, -30}, {97, 109, 97}, {110, 110, 150}, {111, 114, 97}, {115, 115, 151}, {116, 122, 97}, },
            {{48, 95, -30}, {97, 97, 152}, {98, 104, 97}, {105, 105, 153}, {106, 110, 97}, {111, 111, 154}, {112, 122, 97}, },
            {{48, 95, -30}, {97, 98, 97}, {99, 99, 155}, {100, 103, 97}, {104, 104, 156}, {105, 114, 97}, {115, 115, 157}, {116, 122, 97}, },
            {},
            {{124, 124, 158}, },
            {},
            {},
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {{9, 32, -7}, },
            {{9, 32, -4}, },
            {{9, 32, -4}, },
            {},
            {{0, 255, -10}, },
            {},
            {{34, 34, 159}, {39, 39, 160}, {48, 55, 161}, {85, 85, 162}, {88, 88, 163}, {92, 92, 164}, {97, 97, 165}, {98, 98, 166}, {102, 102, 167}, {110, 110, 168}, {114, 114, 169}, {116, 116, 170}, {117, 117, 171}, {118, 118, 172}, {120, 120, 173}, },
            {{101, 101, 174}, },
            {{110, 110, 175}, },
            {{102, 102, 176}, {110, 110, 177}, },
            {{114, 114, 178}, },
            {},
            {{39, 39, 179}, },
            {{34, 34, 180}, {39, 39, 181}, {48, 55, 182}, {85, 85, 183}, {88, 88, 184}, {92, 92, 185}, {97, 97, 186}, {98, 98, 187}, {102, 102, 188}, {110, 110, 189}, {114, 114, 190}, {116, 116, 191}, {117, 117, 192}, {118, 118, 193}, {120, 120, 194}, },
            {},
            {},
            {{48, 57, 75}, {68, 68, 195}, {69, 69, 196}, {100, 100, 197}, {101, 101, 198}, },
            {{0, 9, 199}, {10, 10, 200}, {11, 12, 199}, {13, 13, 201}, {14, 41, 199}, {42, 42, 202}, {43, 255, 199}, },
            {{0, 9, 203}, {10, 10, 204}, {11, 12, 203}, {13, 13, 205}, {14, 255, 203}, },
            {{48, 57, 206}, {68, 68, 207}, {69, 69, 208}, {100, 100, 209}, {101, 101, 210}, },
            {{46, 69, -23}, {100, 101, -23}, },
            {{46, 46, 78}, {48, 57, 80}, {68, 101, -24}, },
            {},
            {{43, 43, 211}, {45, 45, 212}, {48, 57, 213}, },
            {{48, 57, 214}, {65, 70, 215}, {97, 102, 216}, },
            {},
            {{43, 57, -84}, },
            {{48, 102, -85}, },
            {{46, 101, -24}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{0, 9, 217}, {11, 12, 217}, {14, 33, 217}, {34, 34, 218}, {35, 91, 217}, {92, 92, 219}, {93, 65535, 217}, },
            {{0, 9, 220}, {11, 12, 220}, {14, 38, 220}, {40, 91, 220}, {92, 92, 221}, {93, 65535, 220}, },
            {{48, 95, -30}, {97, 114, 97}, {115, 115, 222}, {116, 122, 97}, },
            {{48, 95, -30}, {97, 120, 97}, {121, 121, 223}, {122, 122, 97}, },
            {{48, 95, -30}, {97, 108, 97}, {109, 109, 224}, {110, 122, 97}, },
            {{48, 95, -30}, {97, 115, 97}, {116, 116, 225}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 226}, {117, 122, 97}, },
            {{48, 110, -35}, {111, 111, 227}, {112, 122, 97}, },
            {{48, 100, -37}, {101, 101, 228}, {102, 122, 97}, },
            {{48, 114, -102}, {115, 115, 229}, {116, 116, 230}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 97, 231}, {98, 122, 97}, },
            {{48, 95, -30}, {97, 97, 232}, {98, 122, 97}, },
            {{48, 109, -51}, {110, 110, 233}, {111, 116, 97}, {117, 117, 234}, {118, 122, 97}, },
            {{48, 114, -102}, {115, 115, 235}, {116, 122, 97}, },
            {{48, 101, -42}, {102, 102, 236}, {103, 107, 97}, {108, 108, 237}, {109, 122, 97}, },
            {{48, 95, -30}, {97, 116, 97}, {117, 117, 238}, {118, 122, 97}, },
            {{48, 109, -51}, {110, 110, 239}, {111, 122, 97}, },
            {{48, 114, -102}, {115, 115, 240}, {116, 122, 97}, },
            {{48, 95, -30}, {97, 99, 97}, {100, 100, 241}, {101, 116, 97}, {117, 117, 242}, {118, 122, 97}, },
            {{48, 98, -53}, {99, 99, 243}, {100, 111, 97}, {112, 112, 244}, {113, 115, 97}, {116, 116, 245}, {117, 122, 97}, },
            {{48, 98, -53}, {99, 99, 246}, {100, 107, 97}, {108, 108, 247}, {109, 122, 97}, },
            {{48, 95, -30}, {97, 119, 97}, {120, 120, 248}, {121, 122, 97}, },
            {{48, 110, -35}, {111, 111, 249}, {112, 122, 97}, },
            {{48, 113, -47}, {114, 114, 250}, {115, 122, 97}, },
            {{48, 95, -30}, {97, 104, 97}, {105, 105, 251}, {106, 122, 97}, },
            {{48, 115, -105}, {116, 116, 252}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 107, -38}, {108, 108, 253}, {109, 110, 97}, {111, 111, 254}, {112, 115, 97}, {116, 116, 255}, {117, 122, 97}, },
            {{48, 109, -51}, {110, 110, 256}, {111, 122, 97}, },
            {{48, 99, -118}, {100, 100, 257}, {101, 122, 97}, },
            {{48, 115, -105}, {116, 116, 258}, {117, 122, 97}, },
            {{48, 108, -104}, {109, 109, 259}, {110, 115, 97}, {116, 116, 260}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 118, 97}, {119, 119, 261}, {120, 122, 97}, },
            {{48, 95, -30}, {97, 105, 97}, {106, 106, 262}, {107, 122, 97}, },
            {{48, 115, -105}, {116, 116, 263}, {117, 122, 97}, },
            {{48, 100, -37}, {101, 101, 264}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 265}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 266}, {117, 122, 97}, },
            {{48, 104, -124}, {105, 105, 267}, {106, 110, 97}, {111, 111, 268}, {112, 122, 97}, },
            {{48, 97, -34}, {98, 98, 269}, {99, 122, 97}, },
            {{48, 104, -124}, {105, 105, 270}, {106, 122, 97}, },
            {{48, 95, -30}, {97, 97, 271}, {98, 102, 97}, {103, 103, 272}, {104, 104, 97}, {105, 105, 273}, {106, 115, 97}, {116, 116, 274}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 112, 97}, {113, 113, 275}, {114, 122, 97}, },
            {{48, 110, -35}, {111, 111, 276}, {112, 122, 97}, },
            {{48, 95, -30}, {97, 102, 97}, {103, 103, 277}, {104, 121, 97}, {122, 122, 278}, },
            {{48, 95, -30}, {97, 97, 279}, {98, 113, 97}, {114, 114, 280}, {115, 122, 97}, },
            {{48, 95, -30}, {97, 111, 97}, {112, 112, 281}, {113, 122, 97}, },
            {{48, 104, -124}, {105, 105, 282}, {106, 122, 97}, },
            {{48, 108, -104}, {109, 109, 283}, {110, 122, 97}, },
            {{48, 104, -124}, {105, 105, 284}, {106, 113, 97}, {114, 114, 285}, {115, 122, 97}, },
            {{48, 116, -115}, {117, 117, 286}, {118, 120, 97}, {121, 121, 287}, {122, 122, 97}, },
            {{48, 111, -146}, {112, 112, 288}, {113, 122, 97}, },
            {{48, 104, -124}, {105, 105, 289}, {106, 114, 97}, {115, 115, 290}, {116, 122, 97}, },
            {{48, 104, -124}, {105, 105, 291}, {106, 122, 97}, },
            {{48, 107, -38}, {108, 108, 292}, {109, 122, 97}, },
            {{48, 113, -47}, {114, 114, 293}, {115, 122, 97}, },
            {{48, 104, -124}, {105, 105, 294}, {106, 107, 97}, {108, 108, 295}, {109, 122, 97}, },
            {{48, 95, -30}, {97, 103, 97}, {104, 104, 296}, {105, 122, 97}, },
            {{48, 104, -124}, {105, 105, 297}, {106, 122, 97}, },
            {{48, 115, -105}, {116, 116, 298}, {117, 122, 97}, },
            {},
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 34, -10}, {35, 47, 63}, {48, 55, 299}, {56, 91, 63}, {92, 255, -10}, },
            {{48, 57, 300}, {65, 70, 301}, {97, 102, 302}, },
            {{48, 57, 303}, {65, 70, 304}, {97, 102, 305}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{48, 102, -164}, },
            {{0, 255, -10}, },
            {{48, 102, -165}, },
            {{102, 102, 306}, },
            {{100, 100, 307}, },
            {{110, 110, 308}, },
            {{99, 99, 309}, },
            {{97, 97, 310}, },
            {},
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, {48, 55, 311}, },
            {{48, 57, 312}, {65, 70, 313}, {97, 102, 314}, },
            {{48, 57, 315}, {65, 70, 316}, {97, 102, 317}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{48, 102, -185}, },
            {{39, 39, 179}, },
            {{48, 102, -186}, },
            {},
            {{43, 43, 318}, {45, 45, 319}, {48, 57, 320}, },
            {},
            {{43, 57, -198}, },
            {{0, 41, -78}, {42, 42, 321}, {43, 255, 199}, },
            {{0, 255, -201}, },
            {{0, 9, 199}, {10, 10, 322}, {11, 255, -201}, },
            {{0, 9, 323}, {10, 10, 324}, {11, 12, 323}, {13, 13, 325}, {14, 41, 323}, {42, 42, 326}, {43, 46, 323}, {47, 47, 327}, {48, 255, 323}, },
            {{0, 255, -79}, },
            {},
            {{10, 10, 328}, },
            {{48, 101, -80}, },
            {},
            {{43, 43, 329}, {45, 45, 330}, {48, 57, 331}, },
            {},
            {{43, 57, -210}, },
            {{48, 57, 213}, },
            {{48, 57, 213}, },
            {{48, 57, 213}, },
            {{48, 102, -85}, },
            {{48, 102, -85}, },
            {{48, 102, -85}, },
            {{0, 65535, -100}, },
            {},
            {{34, 34, 332}, {39, 39, 333}, {48, 55, 334}, {85, 85, 335}, {88, 88, 336}, {92, 92, 337}, {97, 97, 338}, {98, 98, 339}, {102, 102, 340}, {110, 110, 341}, {114, 114, 342}, {116, 116, 343}, {117, 117, 344}, {118, 118, 345}, {120, 120, 346}, },
            {{39, 39, 347}, },
            {{34, 34, 348}, {39, 39, 349}, {48, 55, 350}, {85, 85, 351}, {88, 88, 352}, {92, 92, 353}, {97, 97, 354}, {98, 98, 355}, {102, 102, 356}, {110, 110, 357}, {114, 114, 358}, {116, 116, 359}, {117, 117, 360}, {118, 118, 361}, {120, 120, 362}, },
            {{48, 115, -105}, {116, 116, 363}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 113, -47}, {114, 114, 364}, {115, 122, 97}, },
            {{48, 110, -35}, {111, 111, 365}, {112, 122, 97}, },
            {{48, 107, -38}, {108, 108, 366}, {109, 122, 97}, },
            {{48, 95, -30}, {97, 97, 367}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 368}, {102, 122, 97}, },
            {{48, 98, -53}, {99, 99, 369}, {100, 122, 97}, },
            {{48, 113, -47}, {114, 114, 370}, {115, 122, 97}, },
            {{48, 114, -102}, {115, 115, 371}, {116, 122, 97}, },
            {{48, 114, -102}, {115, 115, 372}, {116, 116, 373}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 374}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 375}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 97, 376}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 377}, {102, 122, 97}, },
            {{48, 97, -34}, {98, 98, 378}, {99, 122, 97}, },
            {{48, 95, -30}, {97, 97, 379}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 380}, {102, 122, 97}, },
            {{48, 107, -38}, {108, 108, 381}, {109, 122, 97}, },
            {{48, 108, -104}, {109, 109, 382}, {110, 122, 97}, },
            {{48, 100, -37}, {101, 101, 383}, {102, 122, 97}, },
            {{48, 107, -38}, {108, 108, 384}, {109, 110, 97}, {111, 111, 385}, {112, 122, 97}, },
            {{48, 100, -37}, {101, 101, 386}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 387}, {117, 122, 97}, },
            {{48, 114, -102}, {115, 115, 388}, {116, 122, 97}, },
            {{48, 100, -37}, {101, 101, 389}, {102, 122, 97}, },
            {{48, 95, -30}, {97, 97, 390}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 391}, {102, 122, 97}, },
            {{48, 110, -35}, {111, 111, 392}, {112, 122, 97}, },
            {{48, 104, -124}, {105, 105, 393}, {106, 122, 97}, },
            {{48, 116, -115}, {117, 117, 394}, {118, 122, 97}, },
            {{48, 100, -37}, {101, 101, 395}, {102, 122, 97}, },
            {{48, 102, -144}, {103, 103, 396}, {104, 122, 97}, },
            {{48, 116, -115}, {117, 117, 397}, {118, 122, 97}, },
            {{48, 95, -30}, {97, 97, 398}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 399}, {102, 122, 97}, },
            {{48, 104, -124}, {105, 105, 400}, {106, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 401}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 402}, {102, 122, 97}, },
            {{48, 118, -132}, {119, 119, 403}, {120, 122, 97}, },
            {{48, 113, -47}, {114, 114, 404}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 117, 97}, {118, 118, 405}, {119, 122, 97}, },
            {{48, 115, -105}, {116, 116, 406}, {117, 122, 97}, },
            {{48, 107, -38}, {108, 108, 407}, {109, 122, 97}, },
            {{48, 114, -102}, {115, 115, 408}, {116, 122, 97}, },
            {{48, 99, -118}, {100, 100, 409}, {101, 122, 97}, },
            {{48, 104, -124}, {105, 105, 410}, {106, 122, 97}, },
            {{48, 109, -51}, {110, 110, 411}, {111, 122, 97}, },
            {{48, 116, -115}, {117, 117, 412}, {118, 122, 97}, },
            {{48, 116, -115}, {117, 117, 413}, {118, 122, 97}, },
            {{48, 113, -47}, {114, 114, 414}, {115, 122, 97}, },
            {{48, 109, -51}, {110, 110, 415}, {111, 122, 97}, },
            {{48, 100, -37}, {101, 101, 416}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 417}, {117, 122, 97}, },
            {{48, 104, -124}, {105, 105, 418}, {106, 116, 97}, {117, 117, 419}, {118, 122, 97}, },
            {{48, 111, -146}, {112, 112, 420}, {113, 122, 97}, },
            {{48, 115, -105}, {116, 116, 421}, {117, 122, 97}, },
            {{48, 111, -146}, {112, 112, 422}, {113, 122, 97}, },
            {{48, 114, -102}, {115, 115, 423}, {116, 122, 97}, },
            {{48, 110, -35}, {111, 111, 424}, {112, 122, 97}, },
            {{48, 100, -37}, {101, 101, 425}, {102, 109, 97}, {110, 110, 426}, {111, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 427}, {102, 122, 97}, },
            {{48, 110, -35}, {111, 111, 428}, {112, 122, 97}, },
            {{48, 104, -124}, {105, 105, 429}, {106, 122, 97}, },
            {{48, 109, -51}, {110, 110, 430}, {111, 122, 97}, },
            {{48, 116, -115}, {117, 117, 431}, {118, 122, 97}, },
            {{48, 115, -105}, {116, 116, 432}, {117, 122, 97}, },
            {{48, 99, -118}, {100, 100, 433}, {101, 122, 97}, },
            {{48, 95, -30}, {97, 97, 434}, {98, 122, 97}, },
            {{48, 95, -30}, {97, 97, 435}, {98, 122, 97}, },
            {{48, 107, -38}, {108, 108, 436}, {109, 122, 97}, },
            {{48, 113, -47}, {114, 114, 437}, {115, 122, 97}, },
            {{0, 47, -163}, {48, 55, 438}, {56, 255, -163}, },
            {{0, 47, -163}, {48, 57, 439}, {58, 64, 63}, {65, 70, 440}, {71, 91, 63}, {92, 92, 65}, {93, 96, 63}, {97, 102, 441}, {103, 255, 63}, },
            {{0, 255, -302}, },
            {{0, 255, -302}, },
            {{0, 47, -163}, {48, 57, 442}, {58, 64, 63}, {65, 70, 443}, {71, 96, -302}, {97, 102, 444}, {103, 255, 63}, },
            {{0, 255, -305}, },
            {{0, 255, -305}, },
            {{105, 105, 445}, },
            {{105, 105, 446}, },
            {{100, 100, 447}, },
            {{108, 108, 448}, },
            {{103, 103, 449}, },
            {{39, 39, 179}, {48, 55, 450}, },
            {{39, 39, 179}, {48, 57, 451}, {65, 70, 452}, {97, 102, 453}, },
            {{39, 102, -314}, },
            {{39, 102, -314}, },
            {{39, 39, 179}, {48, 57, 454}, {65, 70, 455}, {97, 102, 456}, },
            {{39, 102, -317}, },
            {{39, 102, -317}, },
            {{48, 57, 320}, },
            {{48, 57, 320}, },
            {{48, 57, 320}, },
            {{0, 9, 457}, {10, 10, 458}, {11, 12, 457}, {13, 13, 459}, {14, 41, 457}, {42, 42, 321}, {43, 46, 457}, {47, 47, 460}, {48, 255, 457}, },
            {{0, 255, -201}, },
            {{0, 9, 461}, {10, 10, 462}, {11, 12, 461}, {13, 13, 463}, {14, 41, 461}, {42, 42, 464}, {43, 255, 461}, },
            {{0, 255, -325}, },
            {{0, 9, 461}, {10, 10, 465}, {11, 255, -325}, },
            {{0, 255, -204}, },
            {},
            {},
            {{48, 57, 331}, },
            {{48, 57, 331}, },
            {{48, 57, 331}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 34, -100}, {35, 47, 217}, {48, 55, 466}, {56, 91, 217}, {92, 65535, -100}, },
            {{48, 57, 467}, {65, 70, 468}, {97, 102, 469}, },
            {{48, 57, 470}, {65, 70, 471}, {97, 102, 472}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{48, 102, -337}, },
            {{0, 65535, -100}, },
            {{48, 102, -338}, },
            {},
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, {48, 55, 473}, },
            {{48, 57, 474}, {65, 70, 475}, {97, 102, 476}, },
            {{48, 57, 477}, {65, 70, 478}, {97, 102, 479}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{48, 102, -353}, },
            {{39, 39, 347}, },
            {{48, 102, -354}, },
            {{48, 113, -47}, {114, 114, 480}, {115, 122, 97}, },
            {{48, 104, -124}, {105, 105, 481}, {106, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 482}, {102, 122, 97}, },
            {{48, 95, -30}, {97, 106, 97}, {107, 107, 483}, {108, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 103, -157}, {104, 104, 484}, {105, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 114, -102}, {115, 115, 485}, {116, 122, 97}, },
            {{48, 115, -105}, {116, 116, 486}, {117, 122, 97}, },
            {{48, 100, -37}, {101, 101, 487}, {102, 104, 97}, {105, 105, 488}, {106, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 110, -35}, {111, 111, 489}, {112, 122, 97}, },
            {{48, 116, -115}, {117, 117, 490}, {118, 122, 97}, },
            {{48, 115, -105}, {116, 116, 491}, {117, 122, 97}, },
            {{48, 107, -38}, {108, 108, 492}, {109, 122, 97}, },
            {{48, 108, -104}, {109, 109, 493}, {110, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 111, -146}, {112, 112, 494}, {113, 122, 97}, },
            {{48, 104, -124}, {105, 105, 495}, {106, 122, 97}, },
            {{48, 113, -47}, {114, 114, 496}, {115, 122, 97}, },
            {{48, 113, -47}, {114, 114, 497}, {115, 122, 97}, },
            {{48, 110, -35}, {111, 111, 498}, {112, 122, 97}, },
            {{48, 100, -37}, {101, 101, 499}, {102, 122, 97}, },
            {{48, 99, -118}, {100, 100, 500}, {101, 122, 97}, },
            {{48, 115, -105}, {116, 116, 501}, {117, 122, 97}, },
            {{48, 109, -51}, {110, 110, 502}, {111, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 109, -51}, {110, 110, 503}, {111, 122, 97}, },
            {{48, 115, -105}, {116, 116, 504}, {117, 122, 97}, },
            {{48, 113, -47}, {114, 114, 505}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 107, -38}, {108, 108, 506}, {109, 122, 97}, },
            {{48, 97, -34}, {98, 98, 507}, {99, 122, 97}, },
            {{48, 114, -102}, {115, 115, 508}, {116, 122, 97}, },
            {{48, 117, -269}, {118, 118, 509}, {119, 122, 97}, },
            {{48, 98, -53}, {99, 99, 510}, {100, 122, 97}, },
            {{48, 115, -105}, {116, 116, 511}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 97, 512}, {98, 122, 97}, },
            {{48, 95, -30}, {97, 97, 513}, {98, 122, 97}, },
            {{48, 95, -30}, {97, 97, 514}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 515}, {102, 122, 97}, },
            {{48, 104, -124}, {105, 105, 516}, {106, 122, 97}, },
            {{48, 100, -37}, {101, 101, 517}, {102, 122, 97}, },
            {{48, 110, -35}, {111, 111, 518}, {112, 122, 97}, },
            {{48, 114, -102}, {115, 115, 519}, {116, 122, 97}, },
            {{48, 115, -105}, {116, 116, 520}, {117, 122, 97}, },
            {{48, 113, -47}, {114, 114, 521}, {115, 122, 97}, },
            {{48, 100, -37}, {101, 101, 522}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 523}, {117, 122, 97}, },
            {{48, 100, -37}, {101, 101, 524}, {102, 122, 97}, },
            {{48, 110, -35}, {111, 111, 525}, {112, 122, 97}, },
            {{48, 104, -124}, {105, 105, 526}, {106, 122, 97}, },
            {{48, 109, -51}, {110, 110, 527}, {111, 122, 97}, },
            {{48, 98, -53}, {99, 99, 528}, {100, 122, 97}, },
            {{48, 110, -35}, {111, 111, 529}, {112, 122, 97}, },
            {{48, 98, -53}, {99, 99, 530}, {100, 122, 97}, },
            {{48, 107, -38}, {108, 108, 531}, {109, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 118, -132}, {119, 119, 532}, {120, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 533}, {100, 122, 97}, },
            {{48, 99, -118}, {100, 100, 534}, {101, 104, 97}, {105, 105, 535}, {106, 109, 97}, {110, 110, 536}, {111, 122, 97}, },
            {{48, 109, -51}, {110, 110, 537}, {111, 122, 97}, },
            {{48, 102, -144}, {103, 103, 538}, {104, 122, 97}, },
            {{48, 102, -144}, {103, 103, 539}, {104, 122, 97}, },
            {{48, 100, -37}, {101, 101, 540}, {102, 122, 97}, },
            {{48, 116, -115}, {117, 117, 541}, {118, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 115, -105}, {116, 116, 542}, {117, 122, 97}, },
            {{48, 113, -47}, {114, 114, 543}, {115, 122, 97}, },
            {{48, 100, -37}, {101, 101, 544}, {102, 122, 97}, },
            {{48, 104, -124}, {105, 105, 545}, {106, 122, 97}, },
            {{0, 255, -10}, },
            {{0, 47, -163}, {48, 57, 546}, {58, 64, 63}, {65, 70, 547}, {71, 96, -302}, {97, 102, 548}, {103, 255, 63}, },
            {{0, 255, -441}, },
            {{0, 255, -441}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{110, 110, 549}, },
            {{102, 102, 550}, },
            {{101, 101, 551}, },
            {{117, 117, 552}, },
            {{109, 109, 553}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, {48, 57, 554}, {65, 70, 555}, {97, 102, 556}, },
            {{39, 102, -453}, },
            {{39, 102, -453}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{0, 9, 557}, {10, 10, 558}, {11, 12, 557}, {13, 13, 559}, {14, 41, 557}, {42, 42, 560}, {43, 255, 557}, },
            {{0, 255, -459}, },
            {{0, 9, 557}, {10, 10, 561}, {11, 255, -459}, },
            {},
            {{0, 255, -325}, },
            {{0, 255, -325}, },
            {{0, 9, 461}, {10, 10, 562}, {11, 255, -325}, },
            {{0, 41, -204}, {42, 42, 464}, {43, 255, -204}, },
            {{0, 255, -325}, },
            {{0, 47, -336}, {48, 55, 563}, {56, 65535, -336}, },
            {{0, 47, -336}, {48, 57, 564}, {58, 64, 217}, {65, 70, 565}, {71, 91, 217}, {92, 92, 219}, {93, 96, 217}, {97, 102, 566}, {103, 65535, 217}, },
            {{0, 65535, -469}, },
            {{0, 65535, -469}, },
            {{0, 47, -336}, {48, 57, 567}, {58, 64, 217}, {65, 70, 568}, {71, 96, -469}, {97, 102, 569}, {103, 65535, 217}, },
            {{0, 65535, -472}, },
            {{0, 65535, -472}, },
            {{39, 39, 347}, {48, 55, 570}, },
            {{39, 39, 347}, {48, 57, 571}, {65, 70, 572}, {97, 102, 573}, },
            {{39, 102, -476}, },
            {{39, 102, -476}, },
            {{39, 39, 347}, {48, 57, 574}, {65, 70, 575}, {97, 102, 576}, },
            {{39, 102, -479}, },
            {{39, 102, -479}, },
            {{48, 95, -30}, {97, 97, 577}, {98, 122, 97}, },
            {{48, 97, -34}, {98, 98, 578}, {99, 122, 97}, },
            {{48, 95, -30}, {97, 97, 579}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 90, -30}, {95, 95, 580}, {97, 122, 97}, },
            {{48, 119, -121}, {120, 120, 581}, {121, 122, 97}, },
            {{48, 109, -51}, {110, 110, 582}, {111, 122, 97}, },
            {{48, 108, -104}, {109, 109, 583}, {110, 122, 97}, },
            {{48, 107, -38}, {108, 108, 584}, {109, 122, 97}, },
            {{48, 100, -37}, {101, 101, 585}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 586}, {102, 122, 97}, },
            {{48, 104, -124}, {105, 105, 587}, {106, 122, 97}, },
            {{48, 115, -105}, {116, 116, 588}, {117, 122, 97}, },
            {{48, 98, -53}, {99, 99, 589}, {100, 122, 97}, },
            {{48, 115, -105}, {116, 116, 590}, {117, 122, 97}, },
            {{48, 109, -51}, {110, 110, 591}, {111, 122, 97}, },
            {{48, 113, -47}, {114, 114, 592}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 99, -118}, {100, 100, 593}, {101, 122, 97}, },
            {{48, 100, -37}, {101, 101, 594}, {102, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 101, -42}, {102, 102, 595}, {103, 122, 97}, },
            {{48, 100, -37}, {101, 101, 596}, {102, 122, 97}, },
            {{48, 107, -38}, {108, 108, 597}, {109, 122, 97}, },
            {{48, 111, -146}, {112, 112, 598}, {113, 122, 97}, },
            {{48, 100, -37}, {101, 101, 599}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 600}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 120, -103}, {121, 121, 601}, {122, 122, 97}, },
            {{48, 115, -105}, {116, 116, 602}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 603}, {117, 122, 97}, },
            {{48, 98, -53}, {99, 99, 604}, {100, 122, 97}, },
            {{48, 98, -53}, {99, 99, 605}, {100, 122, 97}, },
            {{48, 114, -102}, {115, 115, 606}, {116, 122, 97}, },
            {{48, 109, -51}, {110, 110, 607}, {111, 122, 97}, },
            {{48, 115, -105}, {116, 116, 608}, {117, 122, 97}, },
            {{48, 100, -37}, {101, 101, 609}, {102, 122, 97}, },
            {{48, 109, -51}, {110, 110, 610}, {111, 122, 97}, },
            {{48, 109, -51}, {110, 110, 611}, {111, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 99, -118}, {100, 100, 612}, {101, 122, 97}, },
            {{48, 101, -42}, {102, 102, 613}, {103, 122, 97}, },
            {{48, 98, -53}, {99, 99, 614}, {100, 122, 97}, },
            {{48, 102, -144}, {103, 103, 615}, {104, 122, 97}, },
            {{48, 115, -105}, {116, 116, 616}, {117, 122, 97}, },
            {{48, 113, -47}, {114, 114, 617}, {115, 122, 97}, },
            {{48, 103, -157}, {104, 104, 618}, {105, 122, 97}, },
            {{48, 95, -30}, {97, 97, 619}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 97, 620}, {98, 122, 97}, },
            {{48, 100, -37}, {101, 101, 621}, {102, 122, 97}, },
            {{48, 99, -118}, {100, 100, 622}, {101, 122, 97}, },
            {{48, 95, -30}, {97, 97, 623}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 109, -51}, {110, 110, 624}, {111, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 97, -34}, {98, 98, 625}, {99, 115, 97}, {116, 116, 626}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 97, 627}, {98, 122, 97}, },
            {{48, 104, -124}, {105, 105, 628}, {106, 122, 97}, },
            {{48, 90, -30}, {95, 95, 629}, {97, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 109, -51}, {110, 110, 630}, {111, 122, 97}, },
            {{0, 47, -163}, {48, 57, 631}, {58, 64, 63}, {65, 70, 632}, {71, 96, -302}, {97, 102, 633}, {103, 255, 63}, },
            {{0, 255, -548}, },
            {{0, 255, -548}, },
            {{101, 101, 634}, },
            {{0, 9, 635}, {10, 10, 636}, {11, 12, 635}, {13, 13, 637}, {14, 255, 635}, },
            {{102, 102, 638}, },
            {{100, 100, 639}, },
            {{97, 97, 640}, },
            {{39, 39, 179}, {48, 57, 641}, {65, 70, 642}, {97, 102, 643}, },
            {{39, 102, -556}, },
            {{39, 102, -556}, },
            {{0, 255, -459}, },
            {{0, 255, -459}, },
            {{0, 9, 557}, {10, 10, 644}, {11, 255, -459}, },
            {{0, 41, -323}, {42, 42, 560}, {43, 255, -323}, },
            {{0, 255, -459}, },
            {{0, 255, -325}, },
            {{0, 65535, -100}, },
            {{0, 47, -336}, {48, 57, 645}, {58, 64, 217}, {65, 70, 646}, {71, 96, -469}, {97, 102, 647}, {103, 65535, 217}, },
            {{0, 65535, -566}, },
            {{0, 65535, -566}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, {48, 57, 648}, {65, 70, 649}, {97, 102, 650}, },
            {{39, 102, -573}, },
            {{39, 102, -573}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{48, 98, -53}, {99, 99, 651}, {100, 122, 97}, },
            {{48, 116, -115}, {117, 117, 652}, {118, 122, 97}, },
            {{48, 109, -51}, {110, 110, 653}, {111, 122, 97}, },
            {{48, 98, -53}, {99, 99, 654}, {100, 122, 97}, },
            {{48, 115, -105}, {116, 116, 655}, {117, 122, 97}, },
            {{48, 116, -115}, {117, 117, 656}, {118, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 115, -105}, {116, 116, 657}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 658}, {100, 122, 97}, },
            {{48, 104, -124}, {105, 105, 659}, {106, 122, 97}, },
            {{48, 104, -124}, {105, 105, 660}, {106, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 120, -103}, {121, 121, 661}, {122, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 97, 662}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 663}, {102, 122, 97}, },
            {{48, 95, -30}, {97, 97, 664}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 110, -35}, {111, 111, 665}, {112, 122, 97}, },
            {{48, 100, -37}, {101, 101, 666}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 667}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 107, -38}, {108, 108, 668}, {109, 122, 97}, },
            {{48, 100, -37}, {101, 101, 669}, {102, 122, 97}, },
            {{48, 113, -47}, {114, 114, 670}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 671}, {100, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 90, -30}, {95, 95, 672}, {97, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 115, -105}, {116, 116, 673}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 115, -105}, {116, 116, 674}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 675}, {117, 122, 97}, },
            {{48, 101, -42}, {102, 102, 676}, {103, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 108, -104}, {109, 109, 677}, {110, 122, 97}, },
            {{48, 100, -37}, {101, 101, 678}, {102, 122, 97}, },
            {{48, 95, -30}, {97, 97, 679}, {98, 122, 97}, },
            {{48, 120, -103}, {121, 121, 680}, {122, 122, 97}, },
            {{48, 107, -38}, {108, 108, 681}, {109, 122, 97}, },
            {{48, 107, -38}, {108, 108, 682}, {109, 122, 97}, },
            {{48, 115, -105}, {116, 116, 683}, {117, 122, 97}, },
            {{48, 102, -144}, {103, 103, 684}, {104, 122, 97}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -10}, },
            {{0, 255, -552}, },
            {{0, 255, -552}, },
            {},
            {{10, 10, 685}, },
            {{0, 255, -552}, },
            {{101, 101, 686}, },
            {{0, 255, -552}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{39, 39, 179}, },
            {{0, 255, -459}, },
            {{0, 47, -336}, {48, 57, 687}, {58, 64, 217}, {65, 70, 688}, {71, 96, -469}, {97, 102, 689}, {103, 65535, 217}, },
            {{0, 65535, -647}, },
            {{0, 65535, -647}, },
            {{39, 39, 347}, {48, 57, 690}, {65, 70, 691}, {97, 102, 692}, },
            {{39, 102, -650}, },
            {{39, 102, -650}, },
            {{48, 115, -105}, {116, 116, 693}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 694}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 97, 695}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 696}, {102, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 90, -30}, {95, 95, 697}, {97, 122, 97}, },
            {{48, 110, -35}, {111, 111, 698}, {112, 122, 97}, },
            {{48, 115, -105}, {116, 116, 699}, {117, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 700}, {100, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 701}, {100, 122, 97}, },
            {{48, 113, -47}, {114, 114, 702}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 703}, {102, 122, 97}, },
            {{48, 120, -103}, {121, 121, 704}, {122, 122, 97}, },
            {{48, 113, -47}, {114, 114, 705}, {115, 122, 97}, },
            {{48, 111, -146}, {112, 112, 706}, {113, 122, 97}, },
            {{48, 100, -37}, {101, 101, 707}, {102, 122, 97}, },
            {{48, 98, -53}, {99, 99, 708}, {100, 122, 97}, },
            {{48, 114, -102}, {115, 115, 709}, {116, 122, 97}, },
            {{48, 100, -37}, {101, 101, 710}, {102, 122, 97}, },
            {{48, 95, -30}, {97, 97, 711}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 712}, {102, 122, 97}, },
            {{48, 99, -118}, {100, 100, 713}, {101, 122, 97}, },
            {{48, 114, -102}, {115, 115, 714}, {116, 122, 97}, },
            {{48, 111, -146}, {112, 112, 715}, {113, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 716}, {102, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {},
            {{0, 255, -552}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{0, 65535, -100}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{39, 39, 347}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 717}, {102, 122, 97}, },
            {{48, 114, -102}, {115, 115, 718}, {116, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 719}, {100, 122, 97}, },
            {{48, 109, -51}, {110, 110, 720}, {111, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 721}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 722}, {102, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 99, -118}, {100, 100, 723}, {101, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 113, -47}, {114, 114, 724}, {115, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 95, -30}, {97, 97, 725}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 97, -34}, {98, 98, 726}, {99, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 727}, {102, 122, 97}, },
            {{48, 100, -37}, {101, 101, 728}, {102, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 115, -105}, {116, 116, 729}, {117, 122, 97}, },
            {{48, 95, -30}, {97, 97, 730}, {98, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 100, -37}, {101, 101, 731}, {102, 122, 97}, },
            {{48, 114, -102}, {115, 115, 732}, {116, 122, 97}, },
            {{48, 107, -38}, {108, 108, 733}, {109, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 114, -102}, {115, 115, 734}, {116, 122, 97}, },
            {{48, 115, -105}, {116, 116, 735}, {117, 122, 97}, },
            {{48, 115, -105}, {116, 116, 736}, {117, 122, 97}, },
            {{48, 100, -37}, {101, 101, 737}, {102, 122, 97}, },
            {{48, 115, -105}, {116, 116, 738}, {117, 122, 97}, },
            {{48, 90, -30}, {95, 95, 739}, {97, 122, 97}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 122, -30}, },
            {{48, 98, -53}, {99, 99, 740}, {100, 122, 97}, },
            {{48, 95, -30}, {97, 97, 741}, {98, 122, 97}, },
            {{48, 114, -102}, {115, 115, 742}, {116, 122, 97}, },
            {{48, 115, -105}, {116, 116, 743}, {117, 122, 97}, },
            {{48, 122, -30}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {11, 13, 11, 11, 11, 11, 11, 10, 13, 13, 10, 10, 13, 5, 6, 10, 10, 10, 10, 10, 10, 8, 8, 10, 10, 10, 10, 13, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 10, 4, 10, 11, 11, 11, 11, 11, 11, 10, -1, 9, -1, -1, -1, -1, -1, 10, -1, -1, 10, 10, 8, -1, 2, 8, 8, -1, 8, -1, -1, 8, -1, -1, 8, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, -1, -1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, 8, -1, -1, -1, -1, -1, 2, 2, 2, 8, 8, -1, 8, -1, -1, -1, 8, 8, 8, 8, -1, 9, -1, -1, -1, 12, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 7, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 10, 7, 12, 10, 12, 7, 12, 12, 12, 10, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 10, 12, 12, 12, 12, 12, 12, 12, 7, 12, 12, 12, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 12, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 10, 7, 12, 12, 10, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 10, 12, 12, 12, 7, 10, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 12, 12, 12, 12, 10, 12, 10, 7, 12, 12, 12, 10, 10, 12, 10, 10, 12, 10, 12, 12, 10, 10, 10, 12, 12, 12, 10, 10, 12, 12, 12, 10, 12, 10, 10, 10, 7, 10, 12, 10, 12, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, -1, -1, -1, -1, -1, 10, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, 7, 12, 10, 12, 10, 12, 12, 12, 10, 12, 10, 12, 12, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 12, 12, 12, 12, 10, 12, 7, 7, 10, -1, -1, -1, -1, -1, -1, -1, 10, 12, 12, 10, 12, 12, 10, 12, 12, 10, 12, 10, 10, 12, 10, 12, 10, 10, 12, 10, 10, 12, 12, 10, 10, 12, 12, 10, 10, 10, 10, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 10, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
